{% extends 'base.html.twig' %}

{% block title %}Créer un nouveau sujet{% endblock %}

{% block body %}
<div class="newtopic-container">
  <h1 class="newtopic-title">Créer un nouveau sujet</h1>

  {{ form_start(form, {
    'action': path('topic_new'),
    'attr': {'class': 'newtopic-form', 'method': 'POST'}
  }) }}

  <div class="newtopic-group">
    {{ form_label(form.section, null, {'label_attr': {'class': 'newtopic-label'}}) }}
    {{ form_widget(form.section, {'attr': {'class': 'newtopic-input'}}) }}
    {{ form_errors(form.section) }}
  </div>

  <div class="newtopic-group">
    {{ form_label(form.title, null, {'label_attr': {'class': 'newtopic-label'}}) }}
    {{ form_widget(form.title, {'attr': {'class': 'newtopic-input', 'maxlength': 150}}) }}
    <small id="title-count" class="newtopic-hint">150 caractères restants</small>
    {{ form_errors(form.title) }}
  </div>

  <div class="newtopic-group">
    {{ form_label(form.content, null, {'label_attr': {'class': 'newtopic-label'}}) }}
    {{ form_widget(form.content, {'attr': {'class': 'newtopic-textarea'}}) }}
    {{ form_errors(form.content) }}
  </div>

  {# Champ masqué pour les tags #}
  <div class="newtopic-group" style="display:none;">
    {{ form_widget(form.tags) }}
  </div>

  {# Select2 visible #}
  <div class="newtopic-group">
    <label for="tag-select2" class="newtopic-label">Tags</label>
    <select id="tag-select2" multiple="multiple" class="tag-select" style="width:100%;">
      {% for tag in tags %}
        <option value="{{ tag.name }}">{{ tag.name }}</option>
      {% endfor %}
    </select>
    <small class="newtopic-hint">Ajoutez jusqu’à 10 tags composés uniquement de lettres.</small>
  </div>

  <button type="submit" class="newtopic-submit">Créer le sujet</button>

  {{ form_end(form) }}
</div>

{# TinyMCE #}
<script src="{{ asset('js/tinymce/tinymce.min.js') }}"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    tinymce.init({
      selector: '.newtopic-textarea',
      license_key: 'gpl',
      toolbar: 'undo redo | bold italic underline | link emoticons | bullist numlist | table | code',
      plugin: '',
      menubar: false,
      height: 300,
      entities: '160,nbsp,38,amp,60,lt,62,gt',
      entity_encoding: 'raw',
      forced_root_block: false,
      force_br_newlines: true,
      force_p_newlines: false,
      valid_elements: "b, strong, i, em, br",
      extended_valid_elements: "",
      skin_url: '/js/tinymce/skins/ui/oxide',
      content_css: '/js/tinymce/skins/content/default/content.min.css',
      theme: 'silver',
      icons: 'default'
    });
  });
</script>

{# Décompte caractères titre #}
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const titleInput = document.getElementById('{{ form.title.vars.id }}');
    const titleCount = document.getElementById('title-count');

    if (titleInput && titleCount) {
      titleInput.addEventListener('input', () => {
        const remaining = 150 - titleInput.value.length;
        titleCount.textContent = `${remaining} caractères restants`;
      });
    }
  });
</script>

{# Select2 + synchronisation tags #}
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('.newtopic-form');
    const tagSelect2 = $('#tag-select2');
    const hiddenInput = document.querySelector('.tag-input-hidden');

    if (tagSelect2.length) {
      tagSelect2.select2({
        tags: true,
        tokenSeparators: [',', ' '],
        maximumSelectionLength: 10,
        width: '100%',
        placeholder: 'Ajoutez vos tags',
        createTag: function (params) {
          const term = params.term.trim();
          if (/^[a-zA-ZÀ-ÿ0-9_-]{2,30}$/.test(term)) {
            return { id: term, text: term };
          }
          return null;
        }
      });
    }

    if (form && tagSelect2.length && hiddenInput) {
      form.addEventListener('submit', () => {
        if (typeof tinymce !== 'undefined') {
          tinymce.triggerSave();
        }

        const selectedTags = tagSelect2.val();
        if (selectedTags) {
          hiddenInput.value = selectedTags.join(',');
        }
      });
    }
  });
</script>
{% endblock %}