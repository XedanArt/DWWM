{% extends 'base.html.twig' %}

{% block body %}
<div class="dashboard-wrapper">
  <h1 class="dashboard-title">Tableau de bord</h1>

  {% if is_granted('ROLE_ADMIN') %}
    <section class="dashboard-section dashboard-stats">
      <h2>Statistiques</h2>
      <ul class="dashboard-stats-list">
        <li>Total utilisateurs : {{ users|length }}</li>
        <li>Bannis : {{ users|filter(u => u.isBanned())|length }}</li>
        <li>Admins : {{ users|filter(u => 'ROLE_ADMIN' in u.roles)|length }}</li>
        <li><a href="{{ path('dashboard.logs') }}" class="btn btn-outline-secondary btn-sm">Voir les logs admin</a></li>
      </ul>
    </section>

    <section class="dashboard-section">
      <h2>Gestion des utilisateurs</h2>

      <div class="dashboard-filters mb-3">
        <input type="text" id="search-user" class="form-control" placeholder="Rechercher un pseudo ou email...">
        <select id="role-filter" class="form-select mt-2">
          <option value="">Tous les rôles</option>
          <option value="ROLE_USER">Utilisateurs</option>
          <option value="ROLE_ADMIN">Admins</option>
          <option value="banned">Bannis</option>
        </select>
      </div>

      {% if users is defined and users|length > 0 %}
        <ul class="user-list scrollable-user-list">
          {% for user in users %}
            <li class="user-item" data-username="{{ user.username|lower }}" data-email="{{ user.email|lower }}" data-role="{{ user.roles|join(',') }}" data-banned="{{ user.isBanned() ? 'true' : 'false' }}">
              <span>{{ user.displayUsername }}</span>
              {% if user.isBanned() %}
                <span class="badge bg-danger ms-2">Banni jusqu’au {{ user.banUntil|date('d/m/Y H:i') }}</span>
              {% endif %}
              <button class="user-toggle" onclick="toggleUserMenu('{{ user.id }}')">▼</button>

              <div id="user-menu-{{ user.id }}" class="user-menu hidden">
                <p>Dernière connexion :
                  {% if user.lastLogin is not null %}
                    {{ user.lastLogin|date('d/m/Y H:i') }}
                  {% else %}
                    Jamais
                  {% endif %}
                </p>
                <p>Derniers topics : {{ user.topics|length }}</p>
                <p>Derniers posts : {{ user.posts|length }}</p>

                <div class="user-actions">
                  {% if not user.isBanned() %}
                    <a href="{{ path('dashboard.contact_user', { id: user.id }) }}">Contacter</a>

                    <form method="post" action="{{ path('dashboard.ban_user', { id: user.id, duration: 24 }) }}" class="confirm-action">
                      <input type="hidden" name="_token" value="{{ csrf_token('ban-24-' ~ user.id) }}">
                      <button type="submit" class="btn btn-warning btn-sm">Bannir 24h</button>
                    </form>

                    <form method="post" action="{{ path('dashboard.ban_user', { id: user.id, duration: 48 }) }}" class="confirm-action">
                      <input type="hidden" name="_token" value="{{ csrf_token('ban-48-' ~ user.id) }}">
                      <button type="submit" class="btn btn-warning btn-sm">Bannir 48h</button>
                    </form>
                  {% else %}
                    <div class="text-muted">Actions désactivées (utilisateur banni)</div>
                  {% endif %}

                  <form method="post" action="{{ path('dashboard.delete_user', { id: user.id }) }}" class="confirm-action">
                    <input type="hidden" name="_token" value="{{ csrf_token('delete-' ~ user.id) }}">
                    <button type="submit" class="btn btn-danger btn-sm">Supprimer</button>
                  </form>
                </div>
              </div>
            </li>
          {% endfor %}
        </ul>
      {% else %}
        <p>Aucun utilisateur à afficher pour le moment.</p>
      {% endif %}

      <div class="alphabet-filter mt-3">
        {% for letter in 'A'..'Z' %}
          <button class="alphabet-button" onclick="filterUsersByLetter('{{ letter }}')">{{ letter }}</button>
        {% endfor %}
        <button class="alphabet-button reset" onclick="resetUserFilter()">Tous</button>
      </div>
    </section>

    <section class="dashboard-section">
      <h2>Gestion contenu utilisateur</h2>
      <ul class="dashboard-actions">
        <li>
          <a href="{{ path('topic.quarantine.list') }}" class="btn btn-primary">
             Voir les topics en quarantaine
          </a>
        </li>
      </ul>
    </section>

    <section class="dashboard-section">
      <h2>Gérer le contenu</h2>
      <ul class="dashboard-actions">
        <li><a href="{{ path('admin.devblog.new') }}" class="btn btn-primary">Ajouter un Devblog</a></li>
        <li><a href="{{ path('admin.changelog.new') }}" class="btn btn-primary">Ajouter un Changelog</a></li>
        <li><a href="{{ path('admin.announcement.new') }}" class="btn btn-primary">Ajouter une annonce</a></li>
        <li><a href="{{ path('admin.entry.delete') }}" class="btn btn-danger">
              <i class="bi bi-trash3-fill me-1"></i> Suppression d'une entrée
            </a>
        </li>
      </ul>
    </section>
  {% endif %}

  {% if is_granted('ROLE_SUPER_ADMIN') %}
    <section class="dashboard-section super-admin-panel">
      <h2>Panel Super Admin</h2>
      <ul class="dashboard-actions">
        <li><a href="{{ path('superadmin.create_admin') }}" class="btn btn-primary">Créer un administrateur</a></li>
        <li><a href="{{ path('superadmin.revoke_admin') }}" class="btn btn-danger">Révoquer un administrateur</a></li>
      </ul>
    </section>
  {% endif %}
</div>

<script>
function toggleUserMenu(id) {
  const menu = document.getElementById('user-menu-' + id);
  menu.classList.toggle('hidden');
}

function filterUsersByLetter(letter) {
  const users = document.querySelectorAll('.user-item');
  users.forEach(user => {
    const username = user.dataset.username.toUpperCase();
    user.style.display = username.startsWith(letter) ? 'block' : 'none';
  });
}

function resetUserFilter() {
  document.querySelectorAll('.user-item').forEach(user => user.style.display = 'block');
}

document.getElementById('search-user').addEventListener('input', function () {
  const query = this.value.toLowerCase();
  document.querySelectorAll('.user-item').forEach(user => {
    const username = user.dataset.username;
    const email = user.dataset.email;
    user.style.display = (username.includes(query) || email.includes(query)) ? 'block' : 'none';
  });
});

document.getElementById('role-filter').addEventListener('change', function () {
  const role = this.value;
  document.querySelectorAll('.user-item').forEach(user => {
    const roles = user.dataset.role;
    const banned = user.dataset.banned === 'true';
    if (role === '') {
      user.style.display = 'block';
    } else if (role === 'banned') {
      user.style.display = banned ? 'block' : 'none';
    } else {
      user.style.display = roles.includes(role) ? 'block' : 'none';
    }
  });
});

document.querySelectorAll('form.confirm-action').forEach(form => {
  form.addEventListener('submit', function (e) {
    const confirmed = confirm("Êtes-vous sûr de vouloir effectuer cette action ?");
    if (!confirmed) {
      e.preventDefault();
    }
  });
});
</script>
{% endblock %}